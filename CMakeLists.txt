# NOTE: 3.22 is supported by Ubuntu 22.04, and 3.16 in Ubuntu 20.04 is too old.
CMAKE_MINIMUM_REQUIRED(VERSION 3.22 FATAL_ERROR)
PROJECT(thundergbm LANGUAGES CXX CUDA)

IF(MSVC)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W3")
ELSE()
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
ENDIF()

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)

SET(CMAKE_CUDA_ARCHITECTURES 89)

SET(CMAKE_CUDA_STANDARD 17)
SET(CMAKE_CUDA_STANDARD_REQUIRED ON)
IF(MSVC)
  SET(CMAKE_CUDA_FLAGS "${CMAKE_CUDA_FLAGS} -Xcompiler=/openmp --default-stream=per-thread --extended-lambda --generate-line-info")
ELSE()
  SET(CMAKE_CUDA_FLAGS "${CMAKE_CUDA_FLAGS} -Xcompiler=-fopenmp --default-stream=per-thread --extended-lambda --generate-line-info")
ENDIF()

SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

FIND_PACKAGE(CUDAToolkit REQUIRED)

FIND_PACKAGE(OpenMP REQUIRED)
IF(OPENMP_FOUND)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
  SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
ENDIF()

# easylogging++
ADD_DEFINITIONS("-DELPP_FEATURE_PERFORMANCE_TRACKING")
ADD_DEFINITIONS("-DELPP_THREAD_SAFE")
ADD_DEFINITIONS("-DELPP_STL_LOGGING")
ADD_DEFINITIONS("-DELPP_NO_LOG_TO_FILE")

# configuration file
SET(DATASET_DIR ${PROJECT_SOURCE_DIR}/datasets/)
CONFIGURE_FILE(${PROJECT_SOURCE_DIR}/include/thundergbm/config.h.in config.h)

INCLUDE_DIRECTORIES(
  ${CMAKE_CURRENT_BINARY_DIR}
  ${CUDAToolkit_INCLUDE_DIRS}
  ${PROJECT_SOURCE_DIR}/include
)

SET(BUILD_TESTS OFF CACHE BOOL "Build Tests")
IF(BUILD_TESTS)
  ADD_SUBDIRECTORY(src/test)
ENDIF()

INCLUDE(${PROJECT_SOURCE_DIR}/thirdparty/FastHB/cmake/FastHB-source.cmake)

ADD_SUBDIRECTORY(src/thundergbm)
